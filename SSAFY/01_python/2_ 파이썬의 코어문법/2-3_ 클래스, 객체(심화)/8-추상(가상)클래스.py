from abc import *
# import 에 대한 정보는 모듈 파트 참조


class AbstractClass(metaclass=ABCMeta):
    @abstractmethod
    def abstractmethod(self):
        pass


"""추상클래스(abstract class):
파이썬에서 존재하는 기능인 추상클래스(= 가상클래스)는 추상(가상)메쏘드의 목록만 가진 클래스다.
 
구현하려면, abc 모듈을 가져와야 한다.(abc 는 초콜릿이 아니라, Abstract Base Class 의 약자다.)
그후 클래스를 구현할 때 클래스 괄호() 안에 metaclass=ABCMeta 를 넣어주고,
추상클래스 안의 메쏘드를 만들 때 @abstractmethod 를 붙여서 가상 메쏘드로 지정한다.

추상클래스는 자신을 상속하는 자식 클래스가 반드시 구현해야하는 메쏘드를 가상메쏘드로 정해줄 수 있으며, 
(자식 클래스가 추상클래스의 가상메쏘드를 모두 구현안하면 자식 클래스의 인스턴스를 생성할 때 에러(TypeError)가 남)


중요한 것은 추상 클래스는 인스턴스(객체)로 만들 수 없으며, 오로지 상속에만 사용된다.
인스턴스를 만들 수 없으니, 가상 메쏘드도 호출할 경우가 없고, 그래서 가상 메쏘드는 빈 메쏘드로 만듬.


객체지향 프로그래밍에서 추상 클래스는 컨셉(개념, 맥락)만 구현하고, 
실제 기능의 개발은 추상클래스를 상속받는 자식클래스에서 구현할 때 사용하며,
어떤 기능을 개발할지에 대해 추상 클래스로 미리 설계할 수 있음.
"""