class Dump:
    class_attr = []

    def __init__(self, n, m):
        self.attr = m
        Dump.class_attr.append(n)


a = Dump(10, 10)
print(a.attr, a.class_attr)
b = Dump(5, 5)
print(b.attr, b.class_attr)
print("클래스속성 :", Dump.class_attr)

"""클래스 속성:
속성에는 사실 인스턴스 속성 뿐만이 아니라, 클래스 속성도 있으며, 속성은 위같이 2가지 종류로 구분된다.
(지금까지 사용했던 속성은 __init__ 메쏘드에서 만드는 인스턴스 속성이다.)

클래스 속성은

class 클래스이름:
    속성 = 값
과 같이, 따로 메쏘드안에서가 아니라, 클래스에 바로 속성을 생성하는데,
인스턴스 속성과 다른점은, 클래스 속성은 클래스에 속해있기 때문에, 클래스의 모든 인스턴스가 공유하는 속성이다.

따라서 인스턴스가 여러개여도, 인스턴스의 클래스 속성은 모두 1개를 같이 사용한다.

클래스 속성을 접근할 때는 

self.속성이름
인스턴스.속성이름
같이 해도 되지만, 코드상으로 클래스 속성으로 접근하는 걸 알수 있게,

클래스.속성이름
과 같이 클래스 안에서나 밖에서나 접근할 수 있다. (이럴경우 한눈에 클래스 속성임을 알 수 있다)

* 파이썬에서 속성, 메쏘드 이름을 찾을 때는 인스턴스, 클래스 순으로 찾는다.
그래서 인스턴스 속성이 없으면 클래스 속성을 찾으므로 인스턴스.속성이름 도 문제없이 동작하는 것이다.
"""

print("a 인스턴스 속성:", a.__dict__)
print("Dump 클래스 속성:", Dump.__dict__)
"""
참고로 인스턴스, 클래스에서 __dict__ 속성을 출력해보면,
인스턴스와 클래스의 속성을 딕셔너리 구조로 확인할 수 있다.

인스턴스.__dict__ 하면 인스턴스 속성을 확인 할수 있고,
클래스.__dict__ 하면 클래스 속성을 확인 할 수 있다.
"""
