"""
from .모듈 import * 으로 해당 모듈의 모든 변수, 함수, 클래스를 가져올 수 있는데
패키지 외부에 공개하기 싶은 것 까지 공개하게 되는 단점이 있다.
여기서 패키지에서 공개할 변수, 함수, 클래스를 from import 문 앞에 __all__ 를 선언해서 리스트 형식으로 담아주면 된다.
__all__ = ['사용할', '것들']
__all__ 은 이름 그대로 모든것을 *으로 가져갈 때의 가져갈 목록을 정할 수 있다.

파이썬에선 추가로 패키지 안에 하위 패키지를 만들 수 있다.
구현하는 법은 패키지 폴더안에 새 폴더를 만들고 거기에 모듈과 __init__.py 를 넣으면 하위 패키지가 도니다.
import 패키지.하위패키지.모듈
과 같이 하위패키지의 모듈도 가져올 수 있으며, 상위패키지의 모듈에서 하위패키지의 모듈을 가져올 때
import .하위패키지.모듈 from *
과 같이 하지만, 반대로 하위패키지 모듈에서 상위패키지 모듈을 가져올 때는
import ..상위패키지.모듈
import ..상위모듈
과 같이 ..(상위 폴더를 의미) 을 이용한다. (.이 한개씩 더 붙을 수록 더 상위 폴더로 올라간다.

추가로 모듈과 패키지에도 독스트링을 넣을 수 있다.
모듈 파일에 첫줄에 기존 독스트링 형식(""" """)으로 문자열을 넣거나,
패키지 파일의 __init__.py 파일 첫줄에 독스트링 형식으로 문자열을 넣으면 된다.

이럴 경우,
모듈.__doc__
패키지.__doc__
로 모듈과 패키지의 독스트링을 반환할 수 있다.
"""