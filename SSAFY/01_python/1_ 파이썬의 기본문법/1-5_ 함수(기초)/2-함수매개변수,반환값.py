def sum_mul(a, b):
    return a + b, a * b
# 튜플에서 배웠듯이 반환 값이 여러개면 튜플로 반환


result = sum_mul(3, 4)
# result = (7,12)
sum, mul = sum_mul(3, 4)
# sum = 7, mul = 12
print(result, sum, mul)
"""함수의 매개변수(parameter), 반환값(return 문):

지금까지 파이썬 함수에서 괄호()안에 인자값을 넘겨주는 경우가 많았는데,
마찬가지로, 사용자가 만든 함수에서도 인자값을 넘겨받아서, 함수 안에서 활용 할 수 있음.
이를 파라미터(parameter, 매개변수라고 함.
def 함수이름(매개변수):
    코드
같이 함수를 정의할 때 괄호 안에 매개변수를 선언할 수 있다. (매개변수가 여러개도 가능하다.)
이러한 매개변수는 함수를 호출할 때 (ex> 함수이름(전달인자) ) 괄호안에 전달인자로 넘겨받은 인자값을 매개변수에 저장한다.

** 매개변수 =  Parameter(파라미터) = 가인수(Dummy argument) = 형식매개변수  
** 전달인자 =  Argument(아규먼트) = 실인수(인수) = 실매개변수

*** 인자, 인자값은 논란이 많은데, 인자가 전달인자의 줄임말로 쓰기도 하고, 인수(값)과 대조되기도 하는데,
나는 가볍게, 인수(값) vs 인자(변수)로 생각할련다. 인자 = 파라미터 vs 인자값 = 아규먼트


그리고 스크립트에서 함수로 값을 전달(인자)할 수 있듯이, 함수에서 거꾸로 스크리브로 값을 전달할 수 있다.
이렇게 함수가 종료되면서 가져오는, 반환하는 값을 반환 값이라 하며, return 문을 이용하면 된다.

return 반환할 값(or변수)
와 같이 하며, 여러개를 사용할 수 있다. (여러개일 경우 튜플로 반환한다.)(파이썬은 괄호없이 값을 콤마로 구분하면 튜플이 된다.)
return 을 만나면 함수는 반환하게 되는데, 이를 이용해 함수 중간에 return 문을 넣어 함수를 종료하고 반환 할 수 있다.
(보통 분기문(if)의 조건식을 만족할 때 return 문으로 빠져나오게 한다.)


정리해서 함수의 흐름을 파악하자면, 
함수는 호출 됬을 시에, 원래 파이썬 스크립트(코드)의 순서대로 읽다가, 호출되는 행에서 함수로 넘어가서,
(인자값도 있다면, 함수로 넘어갈 때 같이 넘어감) 함수 부분에 있는 모든 코드를 순서대로 처리하고,
return 을 만나거나, 함수의 마지막 코드까지 실행이 끝났으면 함수를 종료하고, 
(반환 값이 있으면 스크립트로 넘어갈 때 같이 넘어감) 아까 스크립트에서 함수를 호출했던 행으로 넘어감.
"""